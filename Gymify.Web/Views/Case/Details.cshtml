@model Gymify.Application.DTOs.Case.CaseInfoDto

@{
	ViewData["Title"] = "Details";
}

<h2 class="text-center">@Model.CaseName</h2>
<div class="text-center">
	<img src="@Model.CaseImageUrl" width="250" alt="@Model.CaseName" />
</div>

<div class="text-center" style="margin-top: 20px;">
	<button id="openCaseBtn" class="authButton scaleButton"
			data-case-id="@Model.CaseId">
		Відкрити кейс
	</button>
</div>

<div class="roulette-wrapper">
	<div class="roulette-container">
		<div id="roulette-strip"></div>
	</div>
</div>


<div id="resultModal" class="modal hidden">
	<div class="modal-content">
		<h2>Your reward</h2>
		<div class="drop-image-containter">
			<img id="dropImage" src=""  width="150" />
		</div>
		<h3 id="dropName"></h3>
		<p id="dropRarity"></p>
		<button id="closeModal">OK</button>
	</div>
</div>


@section Scripts {
	<script>
		// Функція для отримання назви рідкісності (для модального вікна)
		function getRarityName(rarity) {
			switch (rarity) {
				case 0: return "Common";
				case 1: return "Uncommon";
				case 2: return "Rare";
				case 3: return "Epic";
				case 4: return "Legendary";
				default: return "";
			}
		}

		const openButton = document.getElementById("openCaseBtn");
		const strip = document.getElementById("roulette-strip");
		const modal = document.getElementById("resultModal");

		openButton.addEventListener("click", async (e) => {
			e.preventDefault();
			openButton.disabled = true; // Блокуємо кнопку на час анімації

			const caseId = e.target.dataset.caseId;

			const response = await fetch(`/Case/OpenCase?caseId=${caseId}`, {
				method: "POST",
				headers: { "X-Requested-With": "XMLHttpRequest" }
			});

			if (!response.ok) {
				alert("Помилка при відкритті кейсу!");
				openButton.disabled = false;
				return;
			}

			const data = await response.json(); // Отримуємо { rouletteStrip, itemName, ... }

			// 1. Очищуємо та скидаємо стрічку
			strip.innerHTML = '';
			strip.style.transition = 'none'; // Вимикаємо анімацію для скидання
			strip.style.transform = 'translateX(0px)'; // Скидаємо позицію

			// 2. Заповнюємо стрічку з data.rouletteStrip
			data.rouletteStrip.forEach(item => {
				const div = document.createElement('div');
				// Додаємо клас рідкісності для CSS-бордюру
				div.classList.add('item', `rarity-${item.rarity}`);
				div.innerHTML = `<img src="${item.imageURL}" alt="${item.name}" /><p>${item.name}</p>`;
				strip.appendChild(div);
			});

			// 3. Розрахунок анімації
			// Потрібно, щоб 78-й елемент опинився під центральною лінією

			const itemWidth = 120; // .item width
			const itemMargin = 6 + 6; // .item margin (left + right)
			const totalItemWidth = itemWidth + itemMargin; // = 132px

			const containerWidth = 800; // .roulette-container width
			const winningIndex = 78; // Наш фіксований індекс переможця

			// Розраховуємо, де має бути центр 78-го елемента
			// (позиція зліва) + (половина ширини)
			const winnerCenter = (winningIndex * totalItemWidth) + (totalItemWidth / 2);

			// Ми хочемо, щоб центр переможця був по центру контейнера (containerWidth / 2)
			const targetOffset = winnerCenter - (containerWidth / 2);

			// Додаємо невеликий випадковий зсув, щоб не зупинялось завжди піксель в піксель
			const randomJitter = Math.floor(Math.random() * (itemWidth / 4)) - (itemWidth / 8); // ~ від -15px до +15px
			const finalOffset = targetOffset + randomJitter;

			// Необхідна невелика затримка, щоб браузер встиг застосувати скидання позиції
			setTimeout(() => {
				// 4. Запускаємо анімацію
				strip.style.transition = 'transform 4s cubic-bezier(0.25, 1, 0.5, 1)';
				strip.style.transform = `translateX(-${finalOffset}px)`;
			}, 100); // 100ms затримки

			// 5. Показуємо результат після анімації
			setTimeout(() => {
				document.getElementById("dropImage").src = data.itemImageURL;
				document.getElementById("dropName").textContent = data.itemName;
				document.getElementById("dropRarity").textContent = getRarityName(data.itemRarity); // Використовуємо функцію

				// Додаємо клас рідкісності до модального вікна
				modal.querySelector('.modal-content').className = `modal-content rarity-${data.itemRarity}`;

				modal.classList.remove("hidden");
			}, 4200); // 4000ms анімація + 200ms запас
		});

		document.getElementById("closeModal").addEventListener("click", () => {
			modal.classList.add("hidden");
			openButton.disabled = false; // Розблоковуємо кнопку
		});
	</script>
}
